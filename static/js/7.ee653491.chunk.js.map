{"version":3,"file":"static/js/7.ee653491.chunk.js","mappings":"4KAEMA,GAAOC,EAAAA,EAAAA,IAAH,6DAIGC,EAAUC,EAAAA,GAAAA,IAAH,kNAMHH,G,UCNjB,EAJsB,WAClB,OAAO,SAACE,EAAD,M,yLCAEE,EAAa,CACtBC,MAAO,OACPC,OAAQ,YAGCC,EAAc,CACvBF,MAAO,OACPG,QAAS,cACTF,OAAQ,YAGCG,EAAYN,EAAAA,GAAAA,IAAH,gMAUTO,EAAOP,EAAAA,GAAAA,KAAH,yCAIJQ,EAAQR,EAAAA,GAAAA,GAAH,0FAMLS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,wO,UC6CvB,EAtEc,WACV,IAAMW,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAEP,OAFD,EAAeC,MAGV,IAAK,QACD,OAAOP,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SASZ,OACI,UAAClB,EAAD,YACI,SAACE,EAAD,qBACA,UAACD,EAAD,CAAMmB,SARO,SAAAJ,GACjBA,EAAEK,iBACFb,EAASc,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,MAMnC,WACI,SAACU,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNP,KAAK,QACLD,MAAOP,EACPgB,SAAUZ,EACVa,MAAOjC,EACPkC,WAAuB,aAAXxB,GAAyB,qBAGzC,SAACkB,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNP,KAAK,WACLD,MAAOL,EACPc,SAAUZ,EACVa,MAAOjC,EACPkC,WAAuB,aAAXxB,GAAyB,qBAGzC,SAACyB,EAAA,EAAD,CACIC,KAAK,SACLH,MAAO9B,EACPkC,QAAQ,WACRC,KAAK,QAJT,SAMgB,YAAX5B,GAAuB,SAAC6B,EAAA,EAAD,IAAmB,eAG/C,SAAC/B,EAAD,CACIgC,QAAS,kBAAM3B,GAAS4B,EAAAA,EAAAA,OACxBC,GAAI,YAFR,yC,UChDhB,EAdkB,WACd,IAAMhC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAM3B,OAJA+B,EAAAA,EAAAA,YAAU,WACK,aAAXjC,GAAyBkC,EAAAA,GAAAA,MAAY,2BACvC,CAAClC,KAGC,+BACI,SAAC,EAAD","sources":["components/ButtonSpinner/ButtonSpinner.styled.js","components/ButtonSpinner/ButtonSpinner.js","components/Login/Login.styled.js","components/Login/Login.js","view/LoginView.js"],"sourcesContent":["import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n   0% {transform: rotate(360deg)} ;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border: 0.25rem solid #4a99e6;\r\n    border-bottom: 0.25rem solid rgba(0,0,0,0);\r\n    border-radius: 50%;\r\n    animation: ${spin} 1s linear infinite;\r\n`\r\n\r\n","import { Spinner } from \"./ButtonSpinner.styled\";\r\n\r\nconst ButtonSpinner = () => {\r\n    return <Spinner/>;\r\n};\r\n\r\nexport default ButtonSpinner;","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const inputStyle = {\r\n    width: \"100%\",\r\n    margin: \"10px 0px\"\r\n};\r\n\r\nexport const buttonStyle = {\r\n    width: \"100%\",\r\n    padding: \"13.5px 14px\",\r\n    margin: \"10px 0px\"\r\n};\r\n\r\nexport const Container = styled.div`\r\n    height: 100vh;\r\n    max-width: 1280px;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    width: 35%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 53px;\r\n    font-weight: 500;\r\n    color: #4a99e6;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    padding: 10px;\r\n    font-size: 0.9375rem;\r\n    font-weight: 500;\r\n    color: #4a99e6;\r\n    float: right;\r\n    transition: all 300ms ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.05);\r\n    };\r\n`;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { authOperations, authSelectors } from 'redux/auth';\r\nimport { resetStatus } from 'redux/auth/auth-slice';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonSpinner from 'components/ButtonSpinner/ButtonSpinner';\r\nimport { inputStyle, Container, buttonStyle, Title, Form, StyledLink } from './Login.styled';\r\n\r\nconst Login = () => {\r\n    const status = useSelector(authSelectors.getStatus);\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n       const { value, name } = e.target;\r\n        \r\n        switch (name) {\r\n            case \"email\":\r\n                return setEmail(value);\r\n            case \"password\":\r\n                return setPassword(value);\r\n            default: \r\n                return; \r\n        };\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.login({ email, password }));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Login</Title>\r\n            <Form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    style={inputStyle}\r\n                    helperText={status === \"rejected\" && \"Incorrect entry\"}\r\n                />\r\n\r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    style={inputStyle}\r\n                    helperText={status === \"rejected\" && \"Incorrect entry\"}\r\n                />\r\n\r\n                <Button \r\n                    type=\"submit\" \r\n                    style={buttonStyle} \r\n                    variant=\"outlined\" \r\n                    size=\"large\"\r\n                >\r\n                    {status === \"pending\" ? <ButtonSpinner/> : \"Authorize\"}\r\n                </Button>\r\n\r\n                <StyledLink \r\n                    onClick={() => dispatch(resetStatus())}\r\n                    to={\"/register\"}\r\n                >\r\n                    Create a new account\r\n                </StyledLink>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"redux/auth\";\r\nimport Login from \"components/Login/Login\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst LoginView = () => {\r\n    const status = useSelector(authSelectors.getStatus);\r\n\r\n    useEffect(() => {\r\n        status === \"rejected\" && toast.error(\"Something went wrong(\")\r\n    },[status])\r\n\r\n    return (\r\n        <>\r\n            <Login/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginView;"],"names":["spin","keyframes","Spinner","styled","inputStyle","width","margin","buttonStyle","padding","Container","Form","Title","StyledLink","Link","status","useSelector","authSelectors","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","e","target","value","name","onSubmit","preventDefault","authOperations","TextField","required","id","label","onChange","style","helperText","Button","type","variant","size","ButtonSpinner","onClick","resetStatus","to","useEffect","toast"],"sourceRoot":""}