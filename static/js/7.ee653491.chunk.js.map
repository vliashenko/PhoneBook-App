{"version":3,"file":"static/js/7.ee653491.chunk.js","mappings":"4KAEMA,GAAOC,EAAAA,EAAAA,IAAH,6DAIGC,EAAUC,EAAAA,GAAAA,IAAH,kNAMHH,G,UCNjB,EAJsB,WAClB,OAAO,SAACE,EAAD,M,yLCAEE,EAAa,CACtBC,MAAO,OACPC,OAAQ,YAGCC,EAAc,CACvBF,MAAO,OACPG,QAAS,cACTF,OAAQ,YAGCG,EAAYN,EAAAA,GAAAA,IAAH,gMAUTO,EAAOP,EAAAA,GAAAA,KAAH,yCAIJQ,EAAQR,EAAAA,GAAAA,GAAH,0FAMLS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,wO,UC6CvB,EAtEc,WACV,IAAMW,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WACrBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAEP,OAFD,EAAeC,MAGV,IAAK,QACD,OAAOP,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SASZ,OACI,UAAClB,EAAD,YACI,SAACE,EAAD,qBACA,UAACD,EAAD,CAAMmB,SARO,SAAAJ,GACjBA,EAAEK,iBACFb,EAASc,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,MAMnC,WACI,SAACU,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNP,KAAK,QACLD,MAAOP,EACPgB,SAAUZ,EACVa,MAAOjC,EACPkC,WAAuB,aAAXxB,GAAyB,qBAGzC,SAACkB,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNP,KAAK,WACLD,MAAOL,EACPc,SAAUZ,EACVa,MAAOjC,EACPkC,WAAuB,aAAXxB,GAAyB,qBAGzC,SAACyB,EAAA,EAAD,CACIC,KAAK,SACLH,MAAO9B,EACPkC,QAAQ,WACRC,KAAK,QAJT,SAMgB,YAAX5B,GAAuB,SAAC6B,EAAA,EAAD,IAAmB,eAG/C,SAAC/B,EAAD,CACIgC,QAAS,kBAAM3B,GAAS4B,EAAAA,EAAAA,OACxBC,GAAI,YAFR,yC,UChDhB,EAdkB,WACd,IAAMhC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAM3B,OAJA+B,EAAAA,EAAAA,YAAU,WACK,aAAXjC,GAAyBkC,EAAAA,GAAAA,MAAY,2BACvC,CAAClC,KAGC,+BACI,SAAC,EAAD","sources":["components/ButtonSpinner/ButtonSpinner.styled.js","components/ButtonSpinner/ButtonSpinner.js","components/Login/Login.styled.js","components/Login/Login.js","view/LoginView.js"],"sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n   0% {transform: rotate(360deg)} ;\n`;\n\nexport const Spinner = styled.div`\n    width: 2rem;\n    height: 2rem;\n    border: 0.25rem solid #4a99e6;\n    border-bottom: 0.25rem solid rgba(0,0,0,0);\n    border-radius: 50%;\n    animation: ${spin} 1s linear infinite;\n`\n\n","import { Spinner } from \"./ButtonSpinner.styled\";\n\nconst ButtonSpinner = () => {\n    return <Spinner/>;\n};\n\nexport default ButtonSpinner;","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const inputStyle = {\n    width: \"100%\",\n    margin: \"10px 0px\"\n};\n\nexport const buttonStyle = {\n    width: \"100%\",\n    padding: \"13.5px 14px\",\n    margin: \"10px 0px\"\n};\n\nexport const Container = styled.div`\n    height: 100vh;\n    max-width: 1280px;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Form = styled.form`\n    width: 35%;\n`;\n\nexport const Title = styled.h1`\n    font-size: 53px;\n    font-weight: 500;\n    color: #4a99e6;\n`;\n\nexport const StyledLink = styled(Link)`\n    padding: 10px;\n    font-size: 0.9375rem;\n    font-weight: 500;\n    color: #4a99e6;\n    float: right;\n    transition: all 300ms ease-in-out;\n\n    &:hover {\n        transform: scale(1.05);\n    };\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { authOperations, authSelectors } from 'redux/auth';\nimport { resetStatus } from 'redux/auth/auth-slice';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ButtonSpinner from 'components/ButtonSpinner/ButtonSpinner';\nimport { inputStyle, Container, buttonStyle, Title, Form, StyledLink } from './Login.styled';\n\nconst Login = () => {\n    const status = useSelector(authSelectors.getStatus);\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleChange = (e) => {\n       const { value, name } = e.target;\n        \n        switch (name) {\n            case \"email\":\n                return setEmail(value);\n            case \"password\":\n                return setPassword(value);\n            default: \n                return; \n        };\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.login({ email, password }));\n    };\n\n    return (\n        <Container>\n            <Title>Login</Title>\n            <Form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    style={inputStyle}\n                    helperText={status === \"rejected\" && \"Incorrect entry\"}\n                />\n\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    style={inputStyle}\n                    helperText={status === \"rejected\" && \"Incorrect entry\"}\n                />\n\n                <Button \n                    type=\"submit\" \n                    style={buttonStyle} \n                    variant=\"outlined\" \n                    size=\"large\"\n                >\n                    {status === \"pending\" ? <ButtonSpinner/> : \"Authorize\"}\n                </Button>\n\n                <StyledLink \n                    onClick={() => dispatch(resetStatus())}\n                    to={\"/register\"}\n                >\n                    Create a new account\n                </StyledLink>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Login;","import { useSelector } from \"react-redux\";\nimport { authSelectors } from \"redux/auth\";\nimport Login from \"components/Login/Login\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst LoginView = () => {\n    const status = useSelector(authSelectors.getStatus);\n\n    useEffect(() => {\n        status === \"rejected\" && toast.error(\"Something went wrong(\")\n    },[status])\n\n    return (\n        <>\n            <Login/>\n        </>\n    );\n};\n\nexport default LoginView;"],"names":["spin","keyframes","Spinner","styled","inputStyle","width","margin","buttonStyle","padding","Container","Form","Title","StyledLink","Link","status","useSelector","authSelectors","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","e","target","value","name","onSubmit","preventDefault","authOperations","TextField","required","id","label","onChange","style","helperText","Button","type","variant","size","ButtonSpinner","onClick","resetStatus","to","useEffect","toast"],"sourceRoot":""}